@model Web.Models.Reservations.ReservationsIndexViewModel

@{
    ViewData["Title"] = "Index";
}

@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> signInManager;

<h1>Reservations</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-pageSize="@Model.PageSize" asp-route-sortOrder="@ViewData["IdSortParm"]">Id</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-pageSize="@Model.PageSize" asp-route-sortOrder="@ViewData["IsConfirmedSortParm"]">Is confirmed</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-pageSize="@Model.PageSize" asp-route-sortOrder="@ViewData["NumberOfPassagersSortParm"]">Number of passagers</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-pageSize="@Model.PageSize" asp-route-sortOrder="@ViewData["EmailSortParm"]">Email</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsConfirmed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalNumberOfPassagers)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    <a class="nav-link" asp-action="Details" asp-route-id="@item.Id"><span class="btn btn-primary">Details</span></a>
                </td>

                @if (!item.IsConfirmed && User.IsInRole("Admin,Employee"))
                {
                    <td>
                        <a class="nav-link" asp-action="Delete" asp-route-id="@item.Id"><span class="btn btn-danger">Delete</span></a>
                    </td>
                }
            </tr>
        }
    </tbody>
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Number of rows
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@Model.Order" asp-route-pageSize="@ViewData["PageSizeParm10"]">10 rows</a>
            <a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@Model.Order" asp-route-pageSize="@ViewData["PageSizeParm25"]">25 rows</a>
            <a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@Model.Order" asp-route-pageSize="@ViewData["PageSizeParm50"]">50 rows</a>
        </div>
    </div>
    <br />
    <ul class="pagination">
        @for (var i = 1; i <= Model.Pager.PagesCount; i++)
        {
            <li class="page-item @(i == Model.Pager.CurrentPage ? "active" : "")">
                <a asp-route-Pager.CurrentPage="@i" class="page-link">@i</a>
            </li>
        }
    </ul>
</table>

